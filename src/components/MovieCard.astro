---
import { fetchJson } from "../functions/fetchJsonMWDP";
import Image from "astro/components/Image.astro";
import "../styles/global.css";
export const prerender = false;

interface Movie {
  title: string;
  release_date: string;
  overview: string;
  backdrop_path: string;
  poster_path: string;
  vote_average: number;
  vote_count: number;
}

let movie = null;
let popularMovies = [];

try {
  const MAX_PAGE = 100;
  const firstPageData = await fetchJson(
    "https://api.themoviedb.org/3/movie/popular"
  );
  const totalPages = Math.min(firstPageData.total_pages || 1, MAX_PAGE);

  const today = new Date();
  const seed = parseInt(
    `${today.getFullYear()}${(today.getMonth() + 1)
      .toString()
      .padStart(2, "0")}${today.getDate().toString().padStart(2, "0")}`
  );

  const randomPage = (seed % totalPages) + 1;
  const randomPageData = await fetchJson(
    `https://api.themoviedb.org/3/movie/popular?page=${randomPage}`
  );
  const movies = randomPageData.results || [];

  const movieIndex = seed % movies.length;
  movie = movies[movieIndex];
  popularMovies = movies.slice(0, 10);
} catch (err) {
  console.error(err);
}

const backdropBase = "https://image.tmdb.org/t/p/original";
const posterBase = "https://image.tmdb.org/t/p/w500";
---

<section
  id="hero"
  class="relative flex flex-col items-center justify-end min-h-screen px-4 py-6 overflow-hidden text-white bg-center bg-no-repeat bg-cover md:px-20 md:py-10 md:items-start"
  style={`background-image: url(${backdropBase + movie.backdrop_path});`}
>
  <div class="relative z-10 flex flex-col w-full h-64 md:flex-row flip-card">
    <div class="flip-card-inner">
      <!-- Front: Movie Info -->
      <div class="flip-card-front">
        <div class="flex flex-col items-start">
          <h1 id="title" class="mb-4 text-2xl font-bold md:text-5xl">
            {movie?.title}
          </h1>
          <div class="flex items-center mb-4 text-sm text-gray-300">
            <span class="mr-4" id="vote-average">‚≠ê {movie?.vote_average}</span>
            <span class="mr-4" id="release-date">üìÖ {movie?.release_date}</span>
            <span id="vote-count">‚è±Ô∏è {movie?.vote_count} votes</span>
          </div>
          <p
            id="overview"
            class="mb-4 overflow-hidden text-gray-200 transition-all duration-300 line-clamp-3 text-start"
          >
            {movie?.overview}
          </p>
          <div id="providers" class="flex flex-wrap gap-2 mt-4"></div>
        </div>
      </div>
      <!-- Back: Filters Panel (hidden in other side) -->
      <div class="flip-card-back" id="filtersContainer">
        <form
          id="filters"
          class="flex flex-col flex-wrap items-start justify-start max-w-lg gap-6 p-6 transition-all duration-300 md:flex-row bg-opacity-70 "
        >
          <div class="flex flex-col w-full gap-4">
            <h2 class="text-xl font-semibold text-white">Filter by Service</h2>
            <div class="flex flex-row justify-center w-full gap-3 text-white">
              <label
                class="flex items-center gap-3 transition cursor-pointer hover:text-yellow-400"
              >
                <input
                  type="checkbox"
                  name="service"
                  value="Netflix"
                  class="w-5 h-5 transition duration-150 accent-yellow-500"
                />
                <span class="text-lg">Netflix</span>
              </label>
              <label
                class="flex items-center gap-3 transition cursor-pointer hover:text-yellow-400"
              >
                <input
                  type="checkbox"
                  name="service"
                  value="Disney Plus"
                  class="w-5 h-5 transition duration-150 accent-yellow-500"
                />
                <span class="text-lg">Disney+</span>
              </label>
             
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- function btn -->
  <!-- Function buttons bar -->
  <div class="z-20 flex items-center justify-center gap-4 px-4 bottom-4">
    <button id="toggleFiltersBtn" class="function-button"> üîç Filters </button>
    <button class="function-button"> See more </button>
    <button type="button" id="randomBtn" class="function-button">
      Random
    </button>
  </div>

  <!-- Dark overlay -->
  <div
    class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/30 to-transparent"
  >
  </div>
</section>

<div
  class="flex gap-4 overflow-x-auto md:w-1/2 whitespace-nowrap hide-scrollbar"
>
  {
    popularMovies.map((p: Movie) =>
      p.poster_path ? (
        <div class="flex-shrink-0 w-48 p-2 bg-[rgba(0,0,0,0.5)] rounded-lg shadow-md">
          <Image
            src={posterBase + p.poster_path}
            alt={p.title}
            width={300}
            height={450}
            class="mb-2 rounded-lg shadow-lg"
            loading="eager"
          />
          <p class="text-sm text-center">{p.title}</p>
          <button class="block mx-auto mt-2 text-sm text-yellow-500 hover:underline">
            Play Trailer
          </button>
        </div>
      ) : (
        <div class="flex-shrink-0 w-48 p-2 bg-[rgba(0,0,0,0.5)] rounded-lg shadow-md">
          <p class="text-sm text-center text-gray-400">No Poster Available</p>
        </div>
      )
    )
  }
</div>

<script is:inline>
  const toggleBtn = document.getElementById("toggleFiltersBtn");
  const flipCardInner = document.querySelector(".flip-card-inner");

  toggleBtn.addEventListener("click", () => {
    flipCardInner.classList.toggle("flipped");
  });
</script>
